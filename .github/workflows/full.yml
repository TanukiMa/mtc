# .github/workflows/full.yml
name: Local DB Pipeline (Discover, Preprocess, Process, Sync)

on:
  workflow_dispatch:

jobs:
  run_pipeline:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: runner
          POSTGRES_PASSWORD: password
          POSTGRES_DB: localdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install all dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y libpq-dev
          pip install psycopg2-binary sqlalchemy supabase requests beautifulsoup4 configparser url-normalize
          pip install -U ginza ja_ginza_electra
          pip install "numpy<2.0" stanza

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U runner; do sleep 2; done
          echo "PostgreSQL is ready!"

      - name: 1. Initialize Local Database
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          LOCAL_DB_URL: "postgresql://runner:password@localhost:5432/localdb"
        run: python init_local_db.py

      - name: 2. Run URL Discoverer
        env:
          LOCAL_DB_URL: "postgresql://runner:password@localhost:5432/localdb"
        run: python discover_urls.py
      
      - name: 3. Run Preprocessor
        env:
          LOCAL_DB_URL: "postgresql://runner:password@localhost:5432/localdb"
        run: python preprocess.py

      - name: 4. Run NLP Processors in Parallel
        env:
          LOCAL_DB_URL: "postgresql://runner:password@localhost:5432/localdb"
        run: |
          python process_ginza.py &
          python process_stanza.py &
          wait

      - name: 5. Dump Local Database and Upload Artifact
        env:
          PGPASSWORD: password # pg_dumpがパスワードプロンプトなしで実行できるようにする
        run: |
          echo "Dumping local database to local_db_dump.sql..."
          pg_dump --clean --if-exists -h localhost -p 5432 -U runner -d localdb > local_db_dump.sql
          echo "Dump complete."
      
      - name: Upload database dump as artifact
        uses: actions/upload-artifact@v4
        with:
          name: database-dump-${{ github.run_id }}
          path: local_db_dump.sql

      - name: 6. Sync Results to Supabase
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          LOCAL_DB_URL: "postgresql://runner:password@localhost:5432/localdb"
        run: python sync_to_supabase.py
